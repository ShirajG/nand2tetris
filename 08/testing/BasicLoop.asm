// BasicLoop.asm
// push constant 0
@0
D=A;
@SP
A=M
M=D
@SP
M=M+1
// pop local 0
@SP
M=M-1
@SP
A=M
D=M
@R13
M=D
@LCL
D=M
@0
D=D+A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// Label
(BasicLoop_LOOP_START)

// push argument 0
@ARG
D=M
@0
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 0
@LCL
D=M
@0
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
//Add
@SP
A=M;
D=M;
A=A-1;
D=D+M;
M=D;
// pop local 0
@SP
M=M-1
@SP
A=M
D=M
@R13
M=D
@LCL
D=M
@0
D=D+A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// push argument 0
@ARG
D=M
@0
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 1
@1
D=A;
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
//Sub
@SP
A=M;
D=M;
A=A-1;
D=M-D;
M=D;
// pop argument 0
@SP
M=M-1
@SP
A=M
D=M
@R13
M=D
@ARG
D=M
@0
D=D+A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// push argument 0
@ARG
D=M
@0
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
// If-goto LOOP_START
@SP
M=M-1
A=M
D=M
@BasicLoop_LOOP_START
D;JEQ
// push local 0
@LCL
D=M
@0
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
