// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/Register.hdl

/**
 * 16-bit register:
 * If load[t] == 1 then out[t+1] = in[t]
 * else out does not change
 */

CHIP Register {
    IN in[16], load;
    OUT out[16];

    PARTS:
    // Put your code here:
    Mux16(
      b=in,
      sel=load,
      out[0]=out0,
      out[1]=out1,
      out[2]=out2,
      out[3]=out3,
      out[4]=out4,
      out[5]=out5,
      out[6]=out6,
      out[7]=out7,
      out[8]=out8,
      out[9]=out9,
      out[10]=out10,
      out[11]=out11,
      out[12]=out12,
      out[13]=out13,
      out[14]=out14,
      out[15]=out15,
      a[0]=curr0,
      a[1]=curr1,
      a[2]=curr2,
      a[3]=curr3,
      a[4]=curr4,
      a[5]=curr5,
      a[6]=curr6,
      a[7]=curr7,
      a[8]=curr8,
      a[9]=curr9,
      a[10]=curr10,
      a[11]=curr11,
      a[12]=curr12,
      a[13]=curr13,
      a[14]=curr14,
      a[15]=curr15
    );
    Bit(load=load,in=out0,out=out[0],out=curr0);
    Bit(load=load,in=out1,out=out[1],out=curr1);
    Bit(load=load,in=out2,out=out[2],out=curr2);
    Bit(load=load,in=out3,out=out[3],out=curr3);
    Bit(load=load,in=out4,out=out[4],out=curr4);
    Bit(load=load,in=out5,out=out[5],out=curr5);
    Bit(load=load,in=out6,out=out[6],out=curr6);
    Bit(load=load,in=out7,out=out[7],out=curr7);
    Bit(load=load,in=out8,out=out[8],out=curr8);
    Bit(load=load,in=out9,out=out[9],out=curr9);
    Bit(load=load,in=out10,out=out[10],out=curr10);
    Bit(load=load,in=out11,out=out[11],out=curr11);
    Bit(load=load,in=out12,out=out[12],out=curr12);
    Bit(load=load,in=out13,out=out[13],out=curr13);
    Bit(load=load,in=out14,out=out[14],out=curr14);
    Bit(load=load,in=out15,out=out[15],out=curr15);
}
